{"ast":null,"code":"/**\r\n * Type guard to check if the object has a \"main\" property of type string.\r\n *\r\n * @param obj - the object to check\r\n * @returns boolean\r\n */\nfunction hasCorrectMainProperty(obj) {\n  return typeof obj.main === 'string';\n}\n/**\r\n * Checks if the object conforms to the SimplePaletteColorOptions type.\r\n * The minimum requirement is that the object has a \"main\" property of type string, this is always checked.\r\n * Optionally, you can pass additional properties to check.\r\n *\r\n * @param obj - The object to check\r\n * @param additionalPropertiesToCheck - Array containing \"light\", \"dark\", and/or \"contrastText\"\r\n * @returns boolean\r\n */\nfunction checkSimplePaletteColorValues(obj) {\n  let additionalPropertiesToCheck = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  if (!hasCorrectMainProperty(obj)) {\n    return false;\n  }\n  for (const value of additionalPropertiesToCheck) {\n    if (!obj.hasOwnProperty(value) || typeof obj[value] !== 'string') {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\r\n * Creates a filter function used to filter simple palette color options.\r\n * The minimum requirement is that the object has a \"main\" property of type string, this is always checked.\r\n * Optionally, you can pass additional properties to check.\r\n *\r\n * @param additionalPropertiesToCheck - Array containing \"light\", \"dark\", and/or \"contrastText\"\r\n * @returns ([, value]: [any, PaletteColorOptions]) => boolean\r\n */\nexport default function createSimplePaletteValueFilter() {\n  let additionalPropertiesToCheck = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  return _ref => {\n    let [, value] = _ref;\n    return value && checkSimplePaletteColorValues(value, additionalPropertiesToCheck);\n  };\n}","map":{"version":3,"names":["hasCorrectMainProperty","obj","main","checkSimplePaletteColorValues","additionalPropertiesToCheck","arguments","length","undefined","value","hasOwnProperty","createSimplePaletteValueFilter","_ref"],"sources":["C:/Users/Sarah Reid/Desktop/mobileprice/node_modules/@mui/material/utils/createSimplePaletteValueFilter.js"],"sourcesContent":["/**\r\n * Type guard to check if the object has a \"main\" property of type string.\r\n *\r\n * @param obj - the object to check\r\n * @returns boolean\r\n */\r\nfunction hasCorrectMainProperty(obj) {\r\n  return typeof obj.main === 'string';\r\n}\r\n/**\r\n * Checks if the object conforms to the SimplePaletteColorOptions type.\r\n * The minimum requirement is that the object has a \"main\" property of type string, this is always checked.\r\n * Optionally, you can pass additional properties to check.\r\n *\r\n * @param obj - The object to check\r\n * @param additionalPropertiesToCheck - Array containing \"light\", \"dark\", and/or \"contrastText\"\r\n * @returns boolean\r\n */\r\nfunction checkSimplePaletteColorValues(obj, additionalPropertiesToCheck = []) {\r\n  if (!hasCorrectMainProperty(obj)) {\r\n    return false;\r\n  }\r\n  for (const value of additionalPropertiesToCheck) {\r\n    if (!obj.hasOwnProperty(value) || typeof obj[value] !== 'string') {\r\n      return false;\r\n    }\r\n  }\r\n  return true;\r\n}\r\n\r\n/**\r\n * Creates a filter function used to filter simple palette color options.\r\n * The minimum requirement is that the object has a \"main\" property of type string, this is always checked.\r\n * Optionally, you can pass additional properties to check.\r\n *\r\n * @param additionalPropertiesToCheck - Array containing \"light\", \"dark\", and/or \"contrastText\"\r\n * @returns ([, value]: [any, PaletteColorOptions]) => boolean\r\n */\r\nexport default function createSimplePaletteValueFilter(additionalPropertiesToCheck = []) {\r\n  return ([, value]) => value && checkSimplePaletteColorValues(value, additionalPropertiesToCheck);\r\n}"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,sBAAsBA,CAACC,GAAG,EAAE;EACnC,OAAO,OAAOA,GAAG,CAACC,IAAI,KAAK,QAAQ;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,6BAA6BA,CAACF,GAAG,EAAoC;EAAA,IAAlCG,2BAA2B,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,EAAE;EAC1E,IAAI,CAACL,sBAAsB,CAACC,GAAG,CAAC,EAAE;IAChC,OAAO,KAAK;EACd;EACA,KAAK,MAAMO,KAAK,IAAIJ,2BAA2B,EAAE;IAC/C,IAAI,CAACH,GAAG,CAACQ,cAAc,CAACD,KAAK,CAAC,IAAI,OAAOP,GAAG,CAACO,KAAK,CAAC,KAAK,QAAQ,EAAE;MAChE,OAAO,KAAK;IACd;EACF;EACA,OAAO,IAAI;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAASE,8BAA8BA,CAAA,EAAmC;EAAA,IAAlCN,2BAA2B,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,EAAE;EACrF,OAAOM,IAAA;IAAA,IAAC,GAAGH,KAAK,CAAC,GAAAG,IAAA;IAAA,OAAKH,KAAK,IAAIL,6BAA6B,CAACK,KAAK,EAAEJ,2BAA2B,CAAC;EAAA;AAClG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}