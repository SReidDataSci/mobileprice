{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sarah Reid\\\\Desktop\\\\mobileprice\\\\src\\\\PhonePricePredictor.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { Box, Button, Container, Skeleton, TextField, Typography } from '@mui/material';\nimport { useTheme } from '@mui/material/styles';\nimport backgroundImage from './cells.jpg'; // Adjust the path to your image\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PhonePricePredictor = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    battery_power: '',\n    blue: '',\n    clock_speed: '',\n    dual_sim: '',\n    fc: '',\n    four_g: '',\n    int_memory: '',\n    m_dep: '',\n    mobile_wt: '',\n    n_cores: '',\n    px_height: '',\n    px_width: '',\n    pc: '',\n    ram: '',\n    sc_h: '',\n    sc_w: '',\n    talk_time: '',\n    three_g: '',\n    touch_screen: '',\n    wifi: ''\n  });\n  const [prediction, setPrediction] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [predictionMade, setPredictionMade] = useState(false);\n  const theme = useTheme();\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setLoading(true);\n    try {\n      const response = await axios.post('https://mobileprice-production.up.railway.app/predict', formData);\n      setPrediction(response.data.price_range); // Store only the price range\n      setPredictionMade(true);\n    } catch (error) {\n      console.error('Error making prediction', error);\n      setPrediction('Error making prediction. Please try again.');\n      setPredictionMade(true);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      backgroundImage: `url(${backgroundImage})`,\n      // Set the background image for the whole page\n      backgroundSize: 'cover',\n      // Cover the entire area\n      backgroundPosition: 'center',\n      // Center the background image\n      backgroundRepeat: 'no-repeat',\n      // Prevent the background from repeating\n      minHeight: '100vh',\n      // Set the minimum height to full viewport height\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"sm\",\n      sx: {\n        backgroundColor: '#fff',\n        // Solid white background\n        padding: theme.spacing(4),\n        borderRadius: theme.shape.borderRadius,\n        boxShadow: theme.shadows[3],\n        textAlign: 'center',\n        width: '100%',\n        // Ensure the container takes full width\n        maxWidth: '600px',\n        // Maximum width for the container\n        zIndex: 1 // Ensure the container is above the background\n      },\n      children: !predictionMade ?\n      /*#__PURE__*/\n      // Render form only if prediction has not been made\n      _jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          mb: 2,\n          children: \"Phone Price Predictor\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          component: \"form\",\n          onSubmit: handleSubmit,\n          sx: {\n            display: 'flex',\n            flexDirection: 'column',\n            gap: 2\n          },\n          children: [Object.keys(formData).map(key => /*#__PURE__*/_jsxDEV(Box, {\n            children: loading ? /*#__PURE__*/_jsxDEV(Skeleton, {\n              variant: \"rectangular\",\n              width: \"100%\",\n              height: 56\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 21\n            }, this) : /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              label: key,\n              name: key,\n              value: formData[key],\n              onChange: handleChange,\n              variant: \"outlined\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 21\n            }, this)\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 17\n          }, this)), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            variant: \"contained\",\n            color: \"primary\",\n            sx: {\n              mt: 2\n            },\n            disabled: loading,\n            children: loading ? /*#__PURE__*/_jsxDEV(Skeleton, {\n              width: \"50%\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 28\n            }, this) : \"Predict\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        mt: 3,\n        sx: {\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center'\n        },\n        children: [\"The predicted price for that type of phone would be:\", /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            fontWeight: 'bold',\n            marginLeft: '8px'\n          },\n          children: prediction\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_s(PhonePricePredictor, \"ToUT0NXGR8QCFsSRjWyKlkigQu0=\", false, function () {\n  return [useTheme];\n});\n_c = PhonePricePredictor;\nexport default PhonePricePredictor;\nvar _c;\n$RefreshReg$(_c, \"PhonePricePredictor\");","map":{"version":3,"names":["React","useState","axios","Box","Button","Container","Skeleton","TextField","Typography","useTheme","backgroundImage","jsxDEV","_jsxDEV","Fragment","_Fragment","PhonePricePredictor","_s","formData","setFormData","battery_power","blue","clock_speed","dual_sim","fc","four_g","int_memory","m_dep","mobile_wt","n_cores","px_height","px_width","pc","ram","sc_h","sc_w","talk_time","three_g","touch_screen","wifi","prediction","setPrediction","loading","setLoading","predictionMade","setPredictionMade","theme","handleChange","e","target","name","value","handleSubmit","preventDefault","response","post","data","price_range","error","console","sx","backgroundSize","backgroundPosition","backgroundRepeat","minHeight","display","justifyContent","alignItems","children","maxWidth","backgroundColor","padding","spacing","borderRadius","shape","boxShadow","shadows","textAlign","width","zIndex","variant","mb","fileName","_jsxFileName","lineNumber","columnNumber","component","onSubmit","flexDirection","gap","Object","keys","map","key","height","fullWidth","label","onChange","type","color","mt","disabled","style","fontWeight","marginLeft","_c","$RefreshReg$"],"sources":["C:/Users/Sarah Reid/Desktop/mobileprice/src/PhonePricePredictor.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { Box, Button, Container, Skeleton, TextField, Typography } from '@mui/material';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport backgroundImage from './cells.jpg'; // Adjust the path to your image\r\n\r\nconst PhonePricePredictor = () => {\r\n  const [formData, setFormData] = useState({\r\n    battery_power: '',\r\n    blue: '',\r\n    clock_speed: '',\r\n    dual_sim: '',\r\n    fc: '',\r\n    four_g: '',\r\n    int_memory: '',\r\n    m_dep: '',\r\n    mobile_wt: '',\r\n    n_cores: '',\r\n    px_height: '',\r\n    px_width: '',\r\n    pc: '',\r\n    ram: '',\r\n    sc_h: '',\r\n    sc_w: '',\r\n    talk_time: '',\r\n    three_g: '',\r\n    touch_screen: '',\r\n    wifi: '',\r\n  });\r\n\r\n  const [prediction, setPrediction] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [predictionMade, setPredictionMade] = useState(false);\r\n  const theme = useTheme();\r\n\r\n  const handleChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    \r\n    try {\r\n      const response = await axios.post('https://mobileprice-production.up.railway.app/predict', formData);\r\n      setPrediction(response.data.price_range); // Store only the price range\r\n      setPredictionMade(true);\r\n    } catch (error) {\r\n      console.error('Error making prediction', error);\r\n      setPrediction('Error making prediction. Please try again.');\r\n      setPredictionMade(true);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        backgroundImage: `url(${backgroundImage})`, // Set the background image for the whole page\r\n        backgroundSize: 'cover', // Cover the entire area\r\n        backgroundPosition: 'center', // Center the background image\r\n        backgroundRepeat: 'no-repeat', // Prevent the background from repeating\r\n        minHeight: '100vh', // Set the minimum height to full viewport height\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n      }}\r\n    >\r\n      <Container \r\n        maxWidth=\"sm\" \r\n        sx={{ \r\n          backgroundColor: '#fff', // Solid white background\r\n          padding: theme.spacing(4), \r\n          borderRadius: theme.shape.borderRadius, \r\n          boxShadow: theme.shadows[3], \r\n          textAlign: 'center',\r\n          width: '100%', // Ensure the container takes full width\r\n          maxWidth: '600px', // Maximum width for the container\r\n          zIndex: 1 // Ensure the container is above the background\r\n        }}\r\n      >\r\n        {!predictionMade ? ( // Render form only if prediction has not been made\r\n          <>\r\n            <Typography variant=\"h4\" mb={2}>Phone Price Predictor</Typography>\r\n            <Box \r\n              component=\"form\" \r\n              onSubmit={handleSubmit} \r\n              sx={{ display: 'flex', flexDirection: 'column', gap: 2 }}\r\n            >\r\n              {Object.keys(formData).map((key) => (\r\n                <Box key={key}>\r\n                  {loading ? (\r\n                    <Skeleton variant=\"rectangular\" width=\"100%\" height={56} />\r\n                  ) : (\r\n                    <TextField\r\n                      fullWidth\r\n                      label={key}\r\n                      name={key}\r\n                      value={formData[key]}\r\n                      onChange={handleChange}\r\n                      variant=\"outlined\"\r\n                    />\r\n                  )}\r\n                </Box>\r\n              ))}\r\n              <Button \r\n                type=\"submit\" \r\n                variant=\"contained\" \r\n                color=\"primary\"\r\n                sx={{ mt: 2 }}\r\n                disabled={loading}\r\n              >\r\n                {loading ? <Skeleton width=\"50%\" /> : \"Predict\"}\r\n              </Button>\r\n            </Box>\r\n          </>\r\n        ) : (\r\n          <Typography variant=\"h5\" mt={3} sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\r\n            The predicted price for that type of phone would be: \r\n            <span style={{ fontWeight: 'bold', marginLeft: '8px' }}>{prediction}</span>\r\n          </Typography>\r\n        )}\r\n      </Container>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default PhonePricePredictor;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,GAAG,EAAEC,MAAM,EAAEC,SAAS,EAAEC,QAAQ,EAAEC,SAAS,EAAEC,UAAU,QAAQ,eAAe;AACvF,SAASC,QAAQ,QAAQ,sBAAsB;AAC/C,OAAOC,eAAe,MAAM,aAAa,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE3C,MAAMC,mBAAmB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGjB,QAAQ,CAAC;IACvCkB,aAAa,EAAE,EAAE;IACjBC,IAAI,EAAE,EAAE;IACRC,WAAW,EAAE,EAAE;IACfC,QAAQ,EAAE,EAAE;IACZC,EAAE,EAAE,EAAE;IACNC,MAAM,EAAE,EAAE;IACVC,UAAU,EAAE,EAAE;IACdC,KAAK,EAAE,EAAE;IACTC,SAAS,EAAE,EAAE;IACbC,OAAO,EAAE,EAAE;IACXC,SAAS,EAAE,EAAE;IACbC,QAAQ,EAAE,EAAE;IACZC,EAAE,EAAE,EAAE;IACNC,GAAG,EAAE,EAAE;IACPC,IAAI,EAAE,EAAE;IACRC,IAAI,EAAE,EAAE;IACRC,SAAS,EAAE,EAAE;IACbC,OAAO,EAAE,EAAE;IACXC,YAAY,EAAE,EAAE;IAChBC,IAAI,EAAE;EACR,CAAC,CAAC;EAEF,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGvC,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACwC,OAAO,EAAEC,UAAU,CAAC,GAAGzC,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAAC0C,cAAc,EAAEC,iBAAiB,CAAC,GAAG3C,QAAQ,CAAC,KAAK,CAAC;EAC3D,MAAM4C,KAAK,GAAGpC,QAAQ,CAAC,CAAC;EAExB,MAAMqC,YAAY,GAAIC,CAAC,IAAK;IAC1B7B,WAAW,CAAC;MAAE,GAAGD,QAAQ;MAAE,CAAC8B,CAAC,CAACC,MAAM,CAACC,IAAI,GAAGF,CAAC,CAACC,MAAM,CAACE;IAAM,CAAC,CAAC;EAC/D,CAAC;EAED,MAAMC,YAAY,GAAG,MAAOJ,CAAC,IAAK;IAChCA,CAAC,CAACK,cAAc,CAAC,CAAC;IAClBV,UAAU,CAAC,IAAI,CAAC;IAEhB,IAAI;MACF,MAAMW,QAAQ,GAAG,MAAMnD,KAAK,CAACoD,IAAI,CAAC,uDAAuD,EAAErC,QAAQ,CAAC;MACpGuB,aAAa,CAACa,QAAQ,CAACE,IAAI,CAACC,WAAW,CAAC,CAAC,CAAC;MAC1CZ,iBAAiB,CAAC,IAAI,CAAC;IACzB,CAAC,CAAC,OAAOa,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MAC/CjB,aAAa,CAAC,4CAA4C,CAAC;MAC3DI,iBAAiB,CAAC,IAAI,CAAC;IACzB,CAAC,SAAS;MACRF,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,oBACE9B,OAAA,CAACT,GAAG;IACFwD,EAAE,EAAE;MACFjD,eAAe,EAAE,OAAOA,eAAe,GAAG;MAAE;MAC5CkD,cAAc,EAAE,OAAO;MAAE;MACzBC,kBAAkB,EAAE,QAAQ;MAAE;MAC9BC,gBAAgB,EAAE,WAAW;MAAE;MAC/BC,SAAS,EAAE,OAAO;MAAE;MACpBC,OAAO,EAAE,MAAM;MACfC,cAAc,EAAE,QAAQ;MACxBC,UAAU,EAAE;IACd,CAAE;IAAAC,QAAA,eAEFvD,OAAA,CAACP,SAAS;MACR+D,QAAQ,EAAC,IAAI;MACbT,EAAE,EAAE;QACFU,eAAe,EAAE,MAAM;QAAE;QACzBC,OAAO,EAAEzB,KAAK,CAAC0B,OAAO,CAAC,CAAC,CAAC;QACzBC,YAAY,EAAE3B,KAAK,CAAC4B,KAAK,CAACD,YAAY;QACtCE,SAAS,EAAE7B,KAAK,CAAC8B,OAAO,CAAC,CAAC,CAAC;QAC3BC,SAAS,EAAE,QAAQ;QACnBC,KAAK,EAAE,MAAM;QAAE;QACfT,QAAQ,EAAE,OAAO;QAAE;QACnBU,MAAM,EAAE,CAAC,CAAC;MACZ,CAAE;MAAAX,QAAA,EAED,CAACxB,cAAc;MAAA;MAAK;MACnB/B,OAAA,CAAAE,SAAA;QAAAqD,QAAA,gBACEvD,OAAA,CAACJ,UAAU;UAACuE,OAAO,EAAC,IAAI;UAACC,EAAE,EAAE,CAAE;UAAAb,QAAA,EAAC;QAAqB;UAAAc,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY,CAAC,eAClExE,OAAA,CAACT,GAAG;UACFkF,SAAS,EAAC,MAAM;UAChBC,QAAQ,EAAEnC,YAAa;UACvBQ,EAAE,EAAE;YAAEK,OAAO,EAAE,MAAM;YAAEuB,aAAa,EAAE,QAAQ;YAAEC,GAAG,EAAE;UAAE,CAAE;UAAArB,QAAA,GAExDsB,MAAM,CAACC,IAAI,CAACzE,QAAQ,CAAC,CAAC0E,GAAG,CAAEC,GAAG,iBAC7BhF,OAAA,CAACT,GAAG;YAAAgE,QAAA,EACD1B,OAAO,gBACN7B,OAAA,CAACN,QAAQ;cAACyE,OAAO,EAAC,aAAa;cAACF,KAAK,EAAC,MAAM;cAACgB,MAAM,EAAE;YAAG;cAAAZ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,gBAE3DxE,OAAA,CAACL,SAAS;cACRuF,SAAS;cACTC,KAAK,EAAEH,GAAI;cACX3C,IAAI,EAAE2C,GAAI;cACV1C,KAAK,EAAEjC,QAAQ,CAAC2E,GAAG,CAAE;cACrBI,QAAQ,EAAElD,YAAa;cACvBiC,OAAO,EAAC;YAAU;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACnB;UACF,GAZOQ,GAAG;YAAAX,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAaR,CACN,CAAC,eACFxE,OAAA,CAACR,MAAM;YACL6F,IAAI,EAAC,QAAQ;YACblB,OAAO,EAAC,WAAW;YACnBmB,KAAK,EAAC,SAAS;YACfvC,EAAE,EAAE;cAAEwC,EAAE,EAAE;YAAE,CAAE;YACdC,QAAQ,EAAE3D,OAAQ;YAAA0B,QAAA,EAEjB1B,OAAO,gBAAG7B,OAAA,CAACN,QAAQ;cAACuE,KAAK,EAAC;YAAK;cAAAI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,GAAG;UAAS;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACzC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC;MAAA,eACN,CAAC,gBAEHxE,OAAA,CAACJ,UAAU;QAACuE,OAAO,EAAC,IAAI;QAACoB,EAAE,EAAE,CAAE;QAACxC,EAAE,EAAE;UAAEK,OAAO,EAAE,MAAM;UAAEC,cAAc,EAAE,QAAQ;UAAEC,UAAU,EAAE;QAAS,CAAE;QAAAC,QAAA,GAAC,sDAEvG,eAAAvD,OAAA;UAAMyF,KAAK,EAAE;YAAEC,UAAU,EAAE,MAAM;YAAEC,UAAU,EAAE;UAAM,CAAE;UAAApC,QAAA,EAAE5B;QAAU;UAAA0C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjE;IACb;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACQ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACT,CAAC;AAEV,CAAC;AAACpE,EAAA,CAxHID,mBAAmB;EAAA,QA2BTN,QAAQ;AAAA;AAAA+F,EAAA,GA3BlBzF,mBAAmB;AA0HzB,eAAeA,mBAAmB;AAAC,IAAAyF,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}