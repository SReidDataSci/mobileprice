{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sarah Reid\\\\Desktop\\\\mobileprice\\\\src\\\\PhonePricePredictor.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { Box, Button, Container, Skeleton, TextField, Typography } from '@mui/material';\nimport { useTheme } from '@mui/material/styles';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PhonePricePredictor = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    battery_power: '',\n    blue: '',\n    clock_speed: '',\n    dual_sim: '',\n    fc: '',\n    four_g: '',\n    int_memory: '',\n    m_dep: '',\n    mobile_wt: '',\n    n_cores: '',\n    px_height: '',\n    px_width: '',\n    pc: '',\n    ram: '',\n    sc_h: '',\n    sc_w: '',\n    talk_time: '',\n    three_g: '',\n    touch_screen: '',\n    wifi: ''\n  });\n  const [prediction, setPrediction] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [predictionMade, setPredictionMade] = useState(false);\n  const theme = useTheme();\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setLoading(true);\n    try {\n      const response = await axios.post('https://mobileprice-production.up.railway.app/predict', formData);\n      setPrediction(response.data.price_range); // Store only the price range\n      setPredictionMade(true);\n    } catch (error) {\n      console.error('Error making prediction', error);\n      setPrediction('Error making prediction. Please try again.');\n      setPredictionMade(true);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"sm\",\n    sx: {\n      backgroundColor: '#fff',\n      padding: theme.spacing(4),\n      borderRadius: theme.shape.borderRadius,\n      boxShadow: theme.shadows[3],\n      textAlign: 'center',\n      mt: 4,\n      backgroundColor: '#f5f5f5'\n    },\n    children: !predictionMade ?\n    /*#__PURE__*/\n    // Render form only if prediction has not been made\n    _jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        mb: 2,\n        children: \"Phone Price Predictor\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        component: \"form\",\n        onSubmit: handleSubmit,\n        sx: {\n          display: 'flex',\n          flexDirection: 'column',\n          gap: 2\n        },\n        children: [Object.keys(formData).map(key => /*#__PURE__*/_jsxDEV(Box, {\n          children: loading ? /*#__PURE__*/_jsxDEV(Skeleton, {\n            variant: \"rectangular\",\n            width: \"100%\",\n            height: 56\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 19\n          }, this) : /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: key,\n            name: key,\n            value: formData[key],\n            onChange: handleChange,\n            variant: \"outlined\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 19\n          }, this)\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 15\n        }, this)), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"contained\",\n          color: \"primary\",\n          sx: {\n            mt: 2\n          },\n          disabled: loading,\n          children: loading ? /*#__PURE__*/_jsxDEV(Skeleton, {\n            width: \"50%\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 26\n          }, this) : \"Predict\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      mt: 3,\n      sx: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center'\n      },\n      children: [\"The predicted price range is\", /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          fontWeight: 'bold',\n          marginLeft: '8px'\n        },\n        children: prediction\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(PhonePricePredictor, \"ToUT0NXGR8QCFsSRjWyKlkigQu0=\", false, function () {\n  return [useTheme];\n});\n_c = PhonePricePredictor;\nexport default PhonePricePredictor;\nvar _c;\n$RefreshReg$(_c, \"PhonePricePredictor\");","map":{"version":3,"names":["React","useState","axios","Box","Button","Container","Skeleton","TextField","Typography","useTheme","jsxDEV","_jsxDEV","Fragment","_Fragment","PhonePricePredictor","_s","formData","setFormData","battery_power","blue","clock_speed","dual_sim","fc","four_g","int_memory","m_dep","mobile_wt","n_cores","px_height","px_width","pc","ram","sc_h","sc_w","talk_time","three_g","touch_screen","wifi","prediction","setPrediction","loading","setLoading","predictionMade","setPredictionMade","theme","handleChange","e","target","name","value","handleSubmit","preventDefault","response","post","data","price_range","error","console","maxWidth","sx","backgroundColor","padding","spacing","borderRadius","shape","boxShadow","shadows","textAlign","mt","children","variant","mb","fileName","_jsxFileName","lineNumber","columnNumber","component","onSubmit","display","flexDirection","gap","Object","keys","map","key","width","height","fullWidth","label","onChange","type","color","disabled","justifyContent","alignItems","style","fontWeight","marginLeft","_c","$RefreshReg$"],"sources":["C:/Users/Sarah Reid/Desktop/mobileprice/src/PhonePricePredictor.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { Box, Button, Container, Skeleton, TextField, Typography } from '@mui/material';\r\nimport { useTheme } from '@mui/material/styles';\r\n\r\nconst PhonePricePredictor = () => {\r\n  const [formData, setFormData] = useState({\r\n    battery_power: '',\r\n    blue: '',\r\n    clock_speed: '',\r\n    dual_sim: '',\r\n    fc: '',\r\n    four_g: '',\r\n    int_memory: '',\r\n    m_dep: '',\r\n    mobile_wt: '',\r\n    n_cores: '',\r\n    px_height: '',\r\n    px_width: '',\r\n    pc: '',\r\n    ram: '',\r\n    sc_h: '',\r\n    sc_w: '',\r\n    talk_time: '',\r\n    three_g: '',\r\n    touch_screen: '',\r\n    wifi: '',\r\n  });\r\n\r\n  const [prediction, setPrediction] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [predictionMade, setPredictionMade] = useState(false);\r\n  const theme = useTheme();\r\n\r\n  const handleChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    \r\n    try {\r\n      const response = await axios.post('https://mobileprice-production.up.railway.app/predict', formData);\r\n      setPrediction(response.data.price_range); // Store only the price range\r\n      setPredictionMade(true);\r\n    } catch (error) {\r\n      console.error('Error making prediction', error);\r\n      setPrediction('Error making prediction. Please try again.');\r\n      setPredictionMade(true);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container \r\n      maxWidth=\"sm\" \r\n      sx={{ \r\n        backgroundColor: '#fff', \r\n        padding: theme.spacing(4), \r\n        borderRadius: theme.shape.borderRadius, \r\n        boxShadow: theme.shadows[3], \r\n        textAlign: 'center',\r\n        mt: 4,\r\n        backgroundColor: '#f5f5f5'\r\n      }}\r\n    >\r\n      {!predictionMade ? ( // Render form only if prediction has not been made\r\n        <>\r\n          <Typography variant=\"h4\" mb={2}>Phone Price Predictor</Typography>\r\n          <Box \r\n            component=\"form\" \r\n            onSubmit={handleSubmit} \r\n            sx={{ display: 'flex', flexDirection: 'column', gap: 2 }}\r\n          >\r\n            {Object.keys(formData).map((key) => (\r\n              <Box key={key}>\r\n                {loading ? (\r\n                  <Skeleton variant=\"rectangular\" width=\"100%\" height={56} />\r\n                ) : (\r\n                  <TextField\r\n                    fullWidth\r\n                    label={key}\r\n                    name={key}\r\n                    value={formData[key]}\r\n                    onChange={handleChange}\r\n                    variant=\"outlined\"\r\n                  />\r\n                )}\r\n              </Box>\r\n            ))}\r\n            <Button \r\n              type=\"submit\" \r\n              variant=\"contained\" \r\n              color=\"primary\"\r\n              sx={{ mt: 2 }}\r\n              disabled={loading}\r\n            >\r\n              {loading ? <Skeleton width=\"50%\" /> : \"Predict\"}\r\n            </Button>\r\n          </Box>\r\n        </>\r\n      ) : (\r\n        <Typography variant=\"h5\" mt={3} sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\r\n          The predicted price range is \r\n          <span style={{ fontWeight: 'bold', marginLeft: '8px' }}>{prediction}</span>\r\n        </Typography>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default PhonePricePredictor;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}