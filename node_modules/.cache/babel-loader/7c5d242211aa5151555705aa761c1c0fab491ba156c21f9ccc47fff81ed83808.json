{"ast":null,"code":"'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { CacheProvider } from '@emotion/react';\nimport createCache from '@emotion/cache';\nimport { StyleSheet } from '@emotion/sheet';\n\n// We might be able to remove this when this issue is fixed:\n// https://github.com/emotion-js/emotion/issues/2790\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst createEmotionCache = options => {\n  const cache = createCache(options);\n\n  /**\r\n   * This is for client-side apps only.\r\n   * A custom sheet is required to make the GlobalStyles API work with `prepend: true`.\r\n   * This is because the [sheet](https://github.com/emotion-js/emotion/blob/main/packages/react/src/global.js#L94-L99) does not consume the options.\r\n   */\n  class MyStyleSheet extends StyleSheet {\n    constructor(args) {\n      super(args);\n      this.prepend = cache.sheet.prepend;\n    }\n  }\n\n  // Do the same as https://github.com/emotion-js/emotion/blob/main/packages/cache/src/index.js#L238-L245\n  cache.sheet = new MyStyleSheet({\n    key: cache.key,\n    nonce: cache.sheet.nonce,\n    container: cache.sheet.container,\n    speedy: cache.sheet.isSpeedy,\n    prepend: cache.sheet.prepend,\n    insertionPoint: cache.sheet.insertionPoint\n  });\n  return cache;\n};\n\n// prepend: true moves MUI styles to the top of the <head> so they're loaded first.\n// It allows developers to easily override MUI styles with other styling solutions, like CSS modules.\nlet cache;\nif (typeof document === 'object') {\n  cache = createEmotionCache({\n    key: 'css',\n    prepend: true\n  });\n}\nexport default function StyledEngineProvider(props) {\n  const {\n    injectFirst,\n    children\n  } = props;\n  return injectFirst && cache ? /*#__PURE__*/_jsx(CacheProvider, {\n    value: cache,\n    children: children\n  }) : children;\n}\nprocess.env.NODE_ENV !== \"production\" ? StyledEngineProvider.propTypes = {\n  /**\r\n   * Your component tree.\r\n   */\n  children: PropTypes.node,\n  /**\r\n   * By default, the styles are injected last in the <head> element of the page.\r\n   * As a result, they gain more specificity than any other style sheet.\r\n   * If you want to override MUI's styles, set this prop.\r\n   */\n  injectFirst: PropTypes.bool\n} : void 0;","map":{"version":3,"names":["React","PropTypes","CacheProvider","createCache","StyleSheet","jsx","_jsx","createEmotionCache","options","cache","MyStyleSheet","constructor","args","prepend","sheet","key","nonce","container","speedy","isSpeedy","insertionPoint","document","StyledEngineProvider","props","injectFirst","children","value","process","env","NODE_ENV","propTypes","node","bool"],"sources":["C:/Users/Sarah Reid/Desktop/mobileprice/node_modules/@mui/styled-engine/StyledEngineProvider/StyledEngineProvider.js"],"sourcesContent":["'use client';\r\n\r\nimport * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { CacheProvider } from '@emotion/react';\r\nimport createCache from '@emotion/cache';\r\nimport { StyleSheet } from '@emotion/sheet';\r\n\r\n// We might be able to remove this when this issue is fixed:\r\n// https://github.com/emotion-js/emotion/issues/2790\r\nimport { jsx as _jsx } from \"react/jsx-runtime\";\r\nconst createEmotionCache = options => {\r\n  const cache = createCache(options);\r\n\r\n  /**\r\n   * This is for client-side apps only.\r\n   * A custom sheet is required to make the GlobalStyles API work with `prepend: true`.\r\n   * This is because the [sheet](https://github.com/emotion-js/emotion/blob/main/packages/react/src/global.js#L94-L99) does not consume the options.\r\n   */\r\n  class MyStyleSheet extends StyleSheet {\r\n    constructor(args) {\r\n      super(args);\r\n      this.prepend = cache.sheet.prepend;\r\n    }\r\n  }\r\n\r\n  // Do the same as https://github.com/emotion-js/emotion/blob/main/packages/cache/src/index.js#L238-L245\r\n  cache.sheet = new MyStyleSheet({\r\n    key: cache.key,\r\n    nonce: cache.sheet.nonce,\r\n    container: cache.sheet.container,\r\n    speedy: cache.sheet.isSpeedy,\r\n    prepend: cache.sheet.prepend,\r\n    insertionPoint: cache.sheet.insertionPoint\r\n  });\r\n  return cache;\r\n};\r\n\r\n// prepend: true moves MUI styles to the top of the <head> so they're loaded first.\r\n// It allows developers to easily override MUI styles with other styling solutions, like CSS modules.\r\nlet cache;\r\nif (typeof document === 'object') {\r\n  cache = createEmotionCache({\r\n    key: 'css',\r\n    prepend: true\r\n  });\r\n}\r\nexport default function StyledEngineProvider(props) {\r\n  const {\r\n    injectFirst,\r\n    children\r\n  } = props;\r\n  return injectFirst && cache ? /*#__PURE__*/_jsx(CacheProvider, {\r\n    value: cache,\r\n    children: children\r\n  }) : children;\r\n}\r\nprocess.env.NODE_ENV !== \"production\" ? StyledEngineProvider.propTypes = {\r\n  /**\r\n   * Your component tree.\r\n   */\r\n  children: PropTypes.node,\r\n  /**\r\n   * By default, the styles are injected last in the <head> element of the page.\r\n   * As a result, they gain more specificity than any other style sheet.\r\n   * If you want to override MUI's styles, set this prop.\r\n   */\r\n  injectFirst: PropTypes.bool\r\n} : void 0;"],"mappings":"AAAA,YAAY;;AAEZ,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,aAAa,QAAQ,gBAAgB;AAC9C,OAAOC,WAAW,MAAM,gBAAgB;AACxC,SAASC,UAAU,QAAQ,gBAAgB;;AAE3C;AACA;AACA,SAASC,GAAG,IAAIC,IAAI,QAAQ,mBAAmB;AAC/C,MAAMC,kBAAkB,GAAGC,OAAO,IAAI;EACpC,MAAMC,KAAK,GAAGN,WAAW,CAACK,OAAO,CAAC;;EAElC;AACF;AACA;AACA;AACA;EACE,MAAME,YAAY,SAASN,UAAU,CAAC;IACpCO,WAAWA,CAACC,IAAI,EAAE;MAChB,KAAK,CAACA,IAAI,CAAC;MACX,IAAI,CAACC,OAAO,GAAGJ,KAAK,CAACK,KAAK,CAACD,OAAO;IACpC;EACF;;EAEA;EACAJ,KAAK,CAACK,KAAK,GAAG,IAAIJ,YAAY,CAAC;IAC7BK,GAAG,EAAEN,KAAK,CAACM,GAAG;IACdC,KAAK,EAAEP,KAAK,CAACK,KAAK,CAACE,KAAK;IACxBC,SAAS,EAAER,KAAK,CAACK,KAAK,CAACG,SAAS;IAChCC,MAAM,EAAET,KAAK,CAACK,KAAK,CAACK,QAAQ;IAC5BN,OAAO,EAAEJ,KAAK,CAACK,KAAK,CAACD,OAAO;IAC5BO,cAAc,EAAEX,KAAK,CAACK,KAAK,CAACM;EAC9B,CAAC,CAAC;EACF,OAAOX,KAAK;AACd,CAAC;;AAED;AACA;AACA,IAAIA,KAAK;AACT,IAAI,OAAOY,QAAQ,KAAK,QAAQ,EAAE;EAChCZ,KAAK,GAAGF,kBAAkB,CAAC;IACzBQ,GAAG,EAAE,KAAK;IACVF,OAAO,EAAE;EACX,CAAC,CAAC;AACJ;AACA,eAAe,SAASS,oBAAoBA,CAACC,KAAK,EAAE;EAClD,MAAM;IACJC,WAAW;IACXC;EACF,CAAC,GAAGF,KAAK;EACT,OAAOC,WAAW,IAAIf,KAAK,GAAG,aAAaH,IAAI,CAACJ,aAAa,EAAE;IAC7DwB,KAAK,EAAEjB,KAAK;IACZgB,QAAQ,EAAEA;EACZ,CAAC,CAAC,GAAGA,QAAQ;AACf;AACAE,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,GAAGP,oBAAoB,CAACQ,SAAS,GAAG;EACvE;AACF;AACA;EACEL,QAAQ,EAAExB,SAAS,CAAC8B,IAAI;EACxB;AACF;AACA;AACA;AACA;EACEP,WAAW,EAAEvB,SAAS,CAAC+B;AACzB,CAAC,GAAG,KAAK,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}