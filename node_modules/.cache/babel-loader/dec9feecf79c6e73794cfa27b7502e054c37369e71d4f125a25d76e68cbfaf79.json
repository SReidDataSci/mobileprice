{"ast":null,"code":"'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport rootShouldForwardProp from \"../styles/rootShouldForwardProp.js\";\nimport capitalize from \"../utils/capitalize.js\";\nimport { isHorizontal } from \"../Drawer/Drawer.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst SwipeAreaRoot = styled('div', {\n  shouldForwardProp: rootShouldForwardProp\n})(memoTheme(_ref => {\n  let {\n    theme\n  } = _ref;\n  return {\n    position: 'fixed',\n    top: 0,\n    left: 0,\n    bottom: 0,\n    zIndex: theme.zIndex.drawer - 1,\n    variants: [{\n      props: {\n        anchor: 'left'\n      },\n      style: {\n        right: 'auto'\n      }\n    }, {\n      props: {\n        anchor: 'right'\n      },\n      style: {\n        left: 'auto',\n        right: 0\n      }\n    }, {\n      props: {\n        anchor: 'top'\n      },\n      style: {\n        bottom: 'auto',\n        right: 0\n      }\n    }, {\n      props: {\n        anchor: 'bottom'\n      },\n      style: {\n        top: 'auto',\n        bottom: 0,\n        right: 0\n      }\n    }]\n  };\n}));\n\n/**\r\n * @ignore - internal component.\r\n */\nconst SwipeArea = /*#__PURE__*/React.forwardRef(function SwipeArea(props, ref) {\n  const {\n    anchor,\n    classes = {},\n    className,\n    width,\n    style,\n    ...other\n  } = props;\n  const ownerState = props;\n  return /*#__PURE__*/_jsx(SwipeAreaRoot, {\n    className: clsx('PrivateSwipeArea-root', classes.root, classes[`anchor${capitalize(anchor)}`], className),\n    ref: ref,\n    style: {\n      [isHorizontal(anchor) ? 'width' : 'height']: width,\n      ...style\n    },\n    ownerState: ownerState,\n    ...other\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? SwipeArea.propTypes = {\n  /**\r\n   * Side on which to attach the discovery area.\r\n   */\n  anchor: PropTypes.oneOf(['left', 'top', 'right', 'bottom']).isRequired,\n  /**\r\n   * @ignore\r\n   */\n  classes: PropTypes.object,\n  /**\r\n   * @ignore\r\n   */\n  className: PropTypes.string,\n  /**\r\n   * @ignore\r\n   */\n  style: PropTypes.object,\n  /**\r\n   * The width of the left most (or right most) area in `px` where the\r\n   * drawer can be swiped open from.\r\n   */\n  width: PropTypes.number.isRequired\n} : void 0;\nexport default SwipeArea;","map":{"version":3,"names":["React","PropTypes","clsx","styled","memoTheme","rootShouldForwardProp","capitalize","isHorizontal","jsx","_jsx","SwipeAreaRoot","shouldForwardProp","_ref","theme","position","top","left","bottom","zIndex","drawer","variants","props","anchor","style","right","SwipeArea","forwardRef","ref","classes","className","width","other","ownerState","root","process","env","NODE_ENV","propTypes","oneOf","isRequired","object","string","number"],"sources":["C:/Users/Sarah Reid/Desktop/mobileprice/node_modules/@mui/material/SwipeableDrawer/SwipeArea.js"],"sourcesContent":["'use client';\r\n\r\nimport * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { styled } from \"../zero-styled/index.js\";\r\nimport memoTheme from \"../utils/memoTheme.js\";\r\nimport rootShouldForwardProp from \"../styles/rootShouldForwardProp.js\";\r\nimport capitalize from \"../utils/capitalize.js\";\r\nimport { isHorizontal } from \"../Drawer/Drawer.js\";\r\nimport { jsx as _jsx } from \"react/jsx-runtime\";\r\nconst SwipeAreaRoot = styled('div', {\r\n  shouldForwardProp: rootShouldForwardProp\r\n})(memoTheme(({\r\n  theme\r\n}) => ({\r\n  position: 'fixed',\r\n  top: 0,\r\n  left: 0,\r\n  bottom: 0,\r\n  zIndex: theme.zIndex.drawer - 1,\r\n  variants: [{\r\n    props: {\r\n      anchor: 'left'\r\n    },\r\n    style: {\r\n      right: 'auto'\r\n    }\r\n  }, {\r\n    props: {\r\n      anchor: 'right'\r\n    },\r\n    style: {\r\n      left: 'auto',\r\n      right: 0\r\n    }\r\n  }, {\r\n    props: {\r\n      anchor: 'top'\r\n    },\r\n    style: {\r\n      bottom: 'auto',\r\n      right: 0\r\n    }\r\n  }, {\r\n    props: {\r\n      anchor: 'bottom'\r\n    },\r\n    style: {\r\n      top: 'auto',\r\n      bottom: 0,\r\n      right: 0\r\n    }\r\n  }]\r\n})));\r\n\r\n/**\r\n * @ignore - internal component.\r\n */\r\nconst SwipeArea = /*#__PURE__*/React.forwardRef(function SwipeArea(props, ref) {\r\n  const {\r\n    anchor,\r\n    classes = {},\r\n    className,\r\n    width,\r\n    style,\r\n    ...other\r\n  } = props;\r\n  const ownerState = props;\r\n  return /*#__PURE__*/_jsx(SwipeAreaRoot, {\r\n    className: clsx('PrivateSwipeArea-root', classes.root, classes[`anchor${capitalize(anchor)}`], className),\r\n    ref: ref,\r\n    style: {\r\n      [isHorizontal(anchor) ? 'width' : 'height']: width,\r\n      ...style\r\n    },\r\n    ownerState: ownerState,\r\n    ...other\r\n  });\r\n});\r\nprocess.env.NODE_ENV !== \"production\" ? SwipeArea.propTypes = {\r\n  /**\r\n   * Side on which to attach the discovery area.\r\n   */\r\n  anchor: PropTypes.oneOf(['left', 'top', 'right', 'bottom']).isRequired,\r\n  /**\r\n   * @ignore\r\n   */\r\n  classes: PropTypes.object,\r\n  /**\r\n   * @ignore\r\n   */\r\n  className: PropTypes.string,\r\n  /**\r\n   * @ignore\r\n   */\r\n  style: PropTypes.object,\r\n  /**\r\n   * The width of the left most (or right most) area in `px` where the\r\n   * drawer can be swiped open from.\r\n   */\r\n  width: PropTypes.number.isRequired\r\n} : void 0;\r\nexport default SwipeArea;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}